{"version":3,"sources":["utility.js","algorithms.js","components/Header.js","components/Grid/index.js","assets/choose-algorithm.png","assets/making-walls.gif","assets/dragging.gif","components/Tutorial.js","components/reducer.js","components/Home.js","App.js","index.js"],"names":["handleMouseLeave","e","state","isMovingStart","target","classList","remove","isMovingTarget","handleListClick","event","dispatch","algo","innerText","document","querySelector","toggle","type","payload","getGridSize","grid","getElementById","styles","getComputedStyle","gridTemplateRows","split","length","gridTemplateColumns","getIndexOf","childNodes","children","indexOf","getNodeObject","row","col","nodes","filter","node","dfs","instant","a","timeout","time","Promise","resolve","setTimeout","clearGrid","startNode","startNodeIndex","stack","currentNode","pop","currentX","currentY","currentNodeDom","contains","add","rowVectors","colVectors","i","undefined","xCord","yCord","nextNode","classes","isVisited","isWall","nodeObj","push","x","y","bfs","visited","Set","parents","queue","shift","dom","backtracking","nextNodeObj","has","path","Header","className","href","onClick","id","isRunning","handleVirtualize","clearWalls","clearPath","rel","Grid","algorithmObj","algorithms","console","log","list","algorithmDescription","onMouseDown","handleMouseDown","onMouseOver","isMouseDown","isFinished","handleMouseEnter","onMouseUp","handleMouseUp","map","index","onMouseLeave","targetNodeIndex","Tutorial","tutorial","setTutorial","useState","slide","setSlide","src","slide3img","alt","makingWalls","dragging","showSlide","reducer","action","Home","window","innerWidth","windowWidth","setWindowWidth","addEventListener","startIndex","targetIndex","root","style","setProperty","useReducer","defaultState","initialGridArr","App","ReactDOM","render","StrictMode"],"mappings":"mMAqGaA,EAAmB,SAACC,EAAGC,GAC9BA,EAAMC,eAAeF,EAAEG,OAAOC,UAAUC,OAAO,SAC/CJ,EAAMK,gBAAgBN,EAAEG,OAAOC,UAAUC,OAAO,WAIzCE,EAAkB,SAACC,EAAOC,EAAUR,GAC/C,IAAIS,EAAOF,EAAML,OAAOQ,UACPC,SAASC,cAAc,cAC/BT,UAAUU,OAAO,aAC1BL,EAAS,CAAEM,KAAM,WAAYC,QAASN,KAI3BO,EAAc,WACzB,IAAMC,EAAON,SAASO,eAAe,QAC/BC,EAASC,iBAAiBH,GAGhC,MAAO,CAFKE,EAAOE,iBAAiBC,MAAM,KAAKC,OACnCJ,EAAOK,oBAAoBF,MAAM,KAAKC,SAKvCE,EAAa,SAACvB,GACzB,IACMwB,EADaf,SAASO,eAAe,QACbS,SAG9B,OALoC,YAGTD,GAHS,SAIRE,QAAQ1B,IAKzB2B,EAAgB,SAAC7B,EAAO8B,EAAKC,GAIxC,OAHc/B,EAAMgC,MAAMC,QACxB,SAACC,GAAD,OAAUA,EAAKJ,MAAQA,GAAOI,EAAKH,MAAQA,KAE9B,I,+BCvIJI,EAAG,uCAAG,WACjBnC,EACAQ,EACAqB,EACAb,EACAoB,GALiB,mDAAAC,EAAA,sDAOXC,EAAU,SAACC,GAAD,OAAU,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAGjET,EAAMd,IAAc,GACpBe,EAAMf,IAAc,GAG1B2B,EAAUb,EAAKC,GAETa,EAAY5C,EAAMgC,MAAMhC,EAAM6C,gBAC9BC,EAAQ,CAACF,GAjBE,YAmBVE,EAAMvB,OAAS,GAnBL,oBAoBXwB,EAAcD,EAAME,MACpBC,EAAWF,EAAYjB,IACvBoB,EAAWH,EAAYhB,MACvBoB,EAAiBxC,SAASO,eAAT,eACX+B,EADW,YACCC,KAKH/C,UAAUiD,SAAS,UA7BvB,wBA8Bb5C,EAAS,CAAEM,KAAM,aAAcC,SAAS,IACxCP,EAAS,CAAEM,KAAM,cAAeC,SAAS,IA/B5B,2BAkCVoC,EAAehD,UAAUiD,SAAS,UACrCD,EAAehD,UAAUkD,IAAI,WAGzBC,EAAa,CAAC,EAAG,EAAG,GAAI,GACxBC,EAAa,EAAE,EAAG,EAAG,EAAG,GAGrBC,EAAI,EA1CE,aA0CCA,EAAI,GA1CL,yBA4CGC,IAAZrB,EA5CS,kCA4CoBE,IA5CpB,QA6CToB,EAAQT,EAAWK,EAAWE,GAC9BG,EAAQT,EAAWK,EAAWC,GAG9BE,GAAS,GAAKA,EAAQ5B,GAAO6B,GAAS,GAAKA,EAAQ5B,IACjD6B,EAAWjD,SAASO,eAAT,eAAgCwC,EAAhC,YAAyCC,IACpDE,EAAUD,EAASzD,UACnB2D,EAAYD,EAAQT,SAAS,WAC7BW,EAASF,EAAQT,SAAS,QAEzBU,GAAcC,IACbC,EAAUnC,EAAc7B,EAAO0D,EAAOC,GAE1Cb,EAAMmB,KAAKD,KA1DF,QA0CQR,IA1CR,+CAgEI,IAAjBV,EAAMvB,QAAcf,EAAS,CAAEM,KAAM,aAAcC,SAAS,IAhE/C,4CAAH,8DAmEV4B,EAAY,SAACb,EAAKC,GACtB,IAAK,IAAImC,EAAI,EAAGA,EAAIpC,EAAKoC,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIpC,EAAKoC,IAAK,CAC5B,IAAIjC,EAAOvB,SAASO,eAAT,eAAgCgD,EAAhC,YAAqCC,IAChDjC,EAAK/B,UAAUC,OAAO,WACtB8B,EAAK/B,UAAUC,OAAO,SACtB8B,EAAK/B,UAAUC,OAAO,cAKfgE,EAAG,uCAAG,WACjBpE,EACAQ,EACAqB,EACAb,EACAoB,GALiB,uDAAAC,EAAA,sDAQXC,EAAU,SAACC,GAAD,OAAU,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAGjET,EAAMd,IAAc,GACpBe,EAAMf,IAAc,GAE1B2B,EAAUb,EAAKC,GAGTC,EAAQhC,EAAMgC,MACdY,EAAYZ,EAAMhC,EAAM6C,gBACxBwB,EAAU,IAAIC,IAAI,CAAC1B,IACrB2B,EAAU,GACd3B,EAAS,QAAc2B,EACjBC,EAAQ,CAAC5B,GAtBE,aAuBV4B,EAAMjD,OAAS,GAvBL,oBAwBTwB,EAAcyB,EAAMC,QAC1BF,EAAO,YAAOxB,EAAYwB,SACpBtB,EAAWF,EAAYjB,IACvBoB,EAAWH,EAAYhB,IACvBoB,EAAiBxC,SAASO,eAAT,eACb+B,EADa,YACDC,IAEtBH,EAAY2B,IAAMvB,EAClBA,EAAehD,UAAUC,OAAO,UAG5B+C,EAAehD,UAAUiD,SAAS,UAnCvB,wBAoCbuB,EAAa5B,EAAavC,EAAU4B,GACpC5B,EAAS,CAAEM,KAAM,aAAcC,SAAS,IArC3B,2BA0CVoC,EAAehD,UAAUiD,SAAS,UACrCD,EAAehD,UAAUkD,IAAI,WAIzBC,EAAa,CAAC,EAAG,EAAG,GAAI,GACxBC,EAAa,EAAE,EAAG,EAAG,EAAG,GACrBC,EAAI,EAjDE,aAiDCA,EAAI,GAjDL,yBAkDGC,IAAZrB,EAlDS,kCAkDoBE,IAlDpB,QAmDPoB,EAAQT,EAAWK,EAAWE,GAC9BG,EAAQT,EAAWK,EAAWC,GAGhCE,GAAS,GAAKA,EAAQ5B,GAAO6B,GAAS,GAAKA,EAAQ5B,IAEjD6B,EAAWjD,SAASO,eAAT,eAAgCwC,EAAhC,YAAyCC,IACpDG,EAAYF,EAASzD,UAAUiD,SAAS,WACxCW,EAASH,EAASzD,UAAUiD,SAAS,QACpCU,GAAcC,IACba,EAAc/C,EAAc7B,EAAO0D,EAAOC,GACzCU,EAAQQ,IAAID,KACfhB,EAASzD,UAAUkD,IAAI,SACvBuB,EAAYL,QAAZ,sBAA0BA,GAA1B,CAAmCxB,IACnCsB,EAAQhB,IAAIuB,GACZJ,EAAMP,KAAKW,MAlEJ,QAiDQpB,IAjDR,wBAuEfe,EAAU,GAvEK,+BAyEjB/D,EAAS,CAAEM,KAAM,aAAcC,SAAS,IACxCP,EAAS,CAAEM,KAAM,cAAeC,SAAS,IA1ExB,+DAAH,8DA8EV4D,EAAY,uCAAG,WAAO5B,EAAavC,EAAU4B,GAA9B,mBAAAC,EAAA,sDACbC,EAAU,SAACC,GAAD,OAAU,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAEjEuC,EAAO/B,EAAYwB,QACzBxB,EAAY2B,IAAIvE,UAAUkD,IAAI,YACrBG,EAAIsB,EAAKvD,OAAS,EALR,YAKWiC,EAAI,GALf,yBAMDC,IAAZrB,EANa,gCAMgBE,EAAQ,IANxB,OAOjBwC,EAAKtB,GAAGkB,IAAIvE,UAAUkD,IAAI,YAPT,OAKkBG,IALlB,8BASnBhD,EAAS,CAAEM,KAAM,cAAeC,SAAS,IATtB,+DAAH,0D,OC3CHgE,EArGA,SAAC,GAAmC,IAAjCvE,EAAgC,EAAhCA,SAAUR,EAAsB,EAAtBA,MAAO8B,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAgBtC,OACE,mCACE,sBAAKiD,UAAU,aAAf,UACE,qBAAKA,UAAU,SACf,mBAAGC,KAAK,mCAAR,SACE,oBAAID,UAAU,QAAd,yCAIJ,qBAAIA,UAAU,eAAd,UACE,qBAAIA,UAAU,YAAd,UACE,yBACEC,KAAK,IACLD,UAAU,cACVE,QAAS,WACUvE,SAASC,cAAc,cAC/BT,UAAUU,OAAO,cAL9B,UAQE,gDAA4B,IAC5B,mBAAGmE,UAAU,4CAEf,qBAAIG,GAAG,YAAYH,UAAU,YAA7B,UACE,oBAAIE,QAAS,SAAC3E,GAAD,OAAWD,EAAgBC,EAAOC,IAA/C,kCAGA,oBAAI0E,QAAS,SAAC3E,GAAD,OAAWD,EAAgBC,EAAOC,IAA/C,gCAGA,oBAAI0E,QAAS,SAAC3E,GAAD,OAAWD,EAAgBC,EAAOC,IAA/C,kCAGA,oBAAI0E,QAAS,SAAC3E,GAAD,OAAWD,EAAgBC,EAAOC,IAA/C,uBAGA,oBAAI0E,QAAS,SAAC3E,GAAD,OAAWD,EAAgBC,EAAOC,IAA/C,mCAKJ,6BACE,yBACE0E,QAAS,kBAzDM,SAAClF,GACxB,IAAIA,EAAMoF,UACV,OAAQpF,EAAMS,MACZ,IAAK,qBACHD,EAAS,CAAEM,KAAM,aAAcC,SAAS,IACxCoB,EAAInC,EAAOQ,EAAUqB,EAAeb,GACpC,MACF,IAAK,uBACHR,EAAS,CAAEM,KAAM,aAAcC,SAAS,IACxCqD,EAAIpE,EAAOQ,EAAUqB,EAAeb,IAgDjBqE,CAAiBrF,IAChCgF,UAAU,oBAFZ,uBAIahF,EAAMS,KAJnB,SAOF,6BACE,wBACEuE,UAAU,gBACVE,QAAS,YFhFK,SAACpD,EAAKC,EAAKvB,GACnCA,EAAS,CAAEM,KAAM,cAAeC,SAAS,IACzC,IAAK,IAAImD,EAAI,EAAGA,EAAIpC,EAAKoC,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIpC,EAAKoC,IACZxD,SAASO,eAAT,eAAgCgD,EAAhC,YAAqCC,IAC3ChE,UAAUC,OAAO,QE4EdkF,CAAWxD,EAAKC,EAAKvB,IAHzB,2BASF,6BACE,wBACEwE,UAAU,qBACVE,QAAS,YFjFI,SAACpD,EAAKC,EAAKvB,GAClCA,EAAS,CAAEM,KAAM,cAAeC,SAAS,IACzC,IAAK,IAAImD,EAAI,EAAGA,EAAIpC,EAAKoC,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIpC,EAAKoC,IAAK,CAC5B,IAAIjC,EAAOvB,SAASO,eAAT,eAAgCgD,EAAhC,YAAqCC,IAChDjC,EAAK/B,UAAUC,OAAO,WACtB8B,EAAK/B,UAAUC,OAAO,SACtB8B,EAAK/B,UAAUC,OAAO,aE2EdmF,CAAUzD,EAAKC,EAAKvB,IAHxB,6BAUJ,sBAAKwE,UAAU,QAAf,UACE,mBACE9E,OAAO,SACP+E,KAAK,2CACLO,IAAI,aAHN,SAKE,mBAAGR,UAAU,2BAEf,mBAAG9E,OAAO,SAAS+E,KAAK,wBAAwBO,IAAI,aAApD,SACE,mBAAGR,UAAU,gCCcRS,EA3GF,SAAC,GAAyB,IAAvBzF,EAAsB,EAAtBA,MAAOQ,EAAe,EAAfA,SACjBkF,EAAe,CACjBC,WAAY,CAACvB,EAAKjC,GAClBnB,YAAaA,EACba,cAAeA,GAcjB,OACE,0BACEqD,QAAS,WACPU,QAAQC,IAAI,UACZ,IAAIC,EAAOnF,SAASO,eAAe,aAC/B4E,EAAK3F,UAAUiD,SAAS,cAC1B0C,EAAK3F,UAAUC,OAAO,cAE1B4E,UAAU,iBAPZ,UASE,qBAAKA,UAAU,mBAAf,SArByB,SAACvE,GAC5B,GAAa,yBAATA,EACF,OACE,wDACyB,gDADzB,OAEE,kDAFF,wBAkBiCsF,CAAqB/F,EAAMS,QAC9D,qBAAKuE,UAAU,mBAAf,SACE,qBAAIA,UAAU,SAAd,UACE,+BACE,qBAAKA,UAAU,eACf,+CAEF,+BACE,qBAAKA,UAAU,gBACf,gDAEF,+BACE,qBAAKA,UAAU,mBACf,oDAEF,+BACE,qBAAKA,UAAU,iBACf,kDAEF,+BACE,qBAAKA,UAAU,kBACf,kDAEF,+BACE,qBAAKA,UAAU,cACf,oDAKN,qBACEG,GAAG,OACHa,YAAa,SAACzF,IHnDS,SAACL,EAAQM,GAEnCN,EAAOC,UAAUiD,SAAS,WAC1BlD,EAAOC,UAAUiD,SAAS,WAE3B5C,EAAS,CAAEM,KAAM,gBAAiBC,SAAS,IAC3Cb,EAAOC,UAAUkD,IAAI,SAEnBnD,EAAOC,UAAUiD,SAAS,UAC5B5C,EAAS,CAAEM,KAAM,eAAgBC,SAAS,IAExCb,EAAOC,UAAUiD,SAAS,WAC5B5C,EAAS,CAAEM,KAAM,gBAAiBC,SAAS,IGwCrCkF,CAAgB1F,EAAML,OAAQM,IAEhC0F,YAAa,SAAC3F,IHjCU,SAACL,EAAQF,EAAOQ,EAAUkF,GASxD,IAPE1F,EAAMmG,aACLjG,EAAOC,UAAUiD,SAAS,WAC1BlD,EAAOC,UAAUiD,SAAS,UAC3BlD,IAAWS,SAASO,eAAe,SAEnChB,EAAOC,UAAUkD,IAAI,QAGrBrD,EAAMC,gBACLC,EAAOC,UAAUiD,SAAS,YAC1BlD,EAAOC,UAAUiD,SAAS,UAC3BlD,IAAWS,SAASO,eAAe,UAEnChB,EAAOC,UAAUkD,IAAI,SAErB7C,EAAS,CAAEM,KAAM,eAAgBC,QADnBU,EAAWvB,KAGrBF,EAAMoG,YAAY,CACpB,IACMpF,EAA+B0E,EAA/B1E,YAAaa,EAAkB6D,EAAlB7D,cAFC,cAGH6D,EAAaC,WAHV,GAGfvB,EAHe,KAGVjC,EAHU,KAID,yBAAfnC,EAAMS,MACR2D,EAAIpE,EAAOQ,EAAUqB,EAAeb,GAJxB,GAMK,uBAAfhB,EAAMS,MACR0B,EAAInC,EAAOQ,EAAUqB,EAAeb,GAPxB,GAYlB,GACEhB,EAAMK,iBACLH,EAAOC,UAAUiD,SAAS,YAC1BlD,EAAOC,UAAUiD,SAAS,UAC3BlD,IAAWS,SAASO,eAAe,UAEnChB,EAAOC,UAAUkD,IAAI,UAErB7C,EAAS,CAAEM,KAAM,gBAAiBC,QADpBU,EAAWvB,KAGrBF,EAAMoG,YAAY,CACpB,IACMpF,EAA+B0E,EAA/B1E,YAAaa,EAAkB6D,EAAlB7D,cAFC,cAGH6D,EAAaC,WAHV,GAGfvB,EAHe,KAGVjC,EAHU,KAID,yBAAfnC,EAAMS,MACR2D,EAAIpE,EAAOQ,EAAUqB,EAAeb,GAJxB,GAMK,uBAAfhB,EAAMS,MACR0B,EAAInC,EAAOQ,EAAUqB,EAAeb,GAPxB,IGTVqF,CAAiB9F,EAAML,OAAQF,EAAOQ,EAAUkF,IAElDY,UAAW,SAAC/F,GAAD,OH1CU,SAACL,EAAQM,EAAUR,GAC1CA,EAAMmG,aAAa3F,EAAS,CAAEM,KAAM,gBAAiBC,SAAS,IAC9Df,EAAMC,eAAeO,EAAS,CAAEM,KAAM,eAAgBC,SAAS,IAC/Df,EAAMK,gBAAgBG,EAAS,CAAEM,KAAM,gBAAiBC,SAAS,IGuCzCwF,CAAchG,EAAML,OAAQM,EAAUR,IAR9D,SAUGA,EAAMgC,MAAMwE,KAAI,SAACzG,EAAG0G,GAAW,IACtB3E,EAAa/B,EAAb+B,IAAKC,EAAQhC,EAARgC,IACTiD,EAAY,GAChB,OAAIyB,IAAUzG,EAAM6C,gBAClBmC,EAAY,QAEV,qBACE0B,aAAc,SAAC3G,GAAD,OAAOD,EAAiBC,EAAGC,IACzCmF,GAAE,eAAUrD,EAAV,YAAiBC,GAEnBiD,UAAS,oBAAeA,IADnByB,IAKPA,IAAUzG,EAAM2G,iBAClB3B,EAAY,SAEV,qBACE0B,aAAc,SAAC3G,GAAD,OAAOD,EAAiBC,EAAGC,IACzCmF,GAAE,eAAUrD,EAAV,YAAiBC,GAEnBiD,UAAS,oBAAeA,IADnByB,IAMT,qBACEC,aAAc,SAAC3G,GAAD,OAAOD,EAAiBC,EAAGC,IACzCmF,GAAE,eAAUrD,EAAV,YAAiBC,GAEnBiD,UAAS,aADJyB,YChHJ,MAA0B,6CCA1B,MAA0B,yCCA1B,MAA0B,qCC2L1BG,EArLE,SAAC,GAA8B,EAA5BC,SAA6B,IAAnBC,EAAkB,EAAlBA,YAAkB,EACpBC,mBAAS,GADW,mBACvCC,EADuC,KAChCC,EADgC,KAuI9C,OACE,0BAASjC,UAAU,UAAnB,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,eAAf,SACE,8BAAIgC,EAAJ,UAEF,qBAAKhC,UAAU,iBAAiBE,QAAS,kBAAM4B,GAAY,IAA3D,SACE,mBAAG9B,UAAU,oBA5IH,SAACgC,GACjB,OAAc,IAAVA,EAEA,sBAAKhC,UAAU,QAAf,UACE,wEACA,iHAIA,4IAIA,qBAAKA,UAAU,mBAGA,IAAVgC,EAEP,sBAAKhC,UAAU,QAAf,UACE,kEACA,0MAKA,mMAKA,qBAAKA,UAAU,mBAGA,IAAVgC,EAEP,sBAAKhC,UAAU,QAAf,UACE,uDACA,8GAIA,+DACgC,gDADhC,sBAEa,8CAFb,qKAMA,qBAAKA,UAAU,gBAAf,SACE,qBAAKkC,IAAKC,EAAWC,IAAI,UAIZ,IAAVJ,EAEP,sBAAKhC,UAAU,QAAf,UACE,qDACA,uEACA,8BACE,0DADF,kEAGE,uBACA,uBACA,wDALF,6EAOE,uBACA,uBACA,0DATF,mFAWE,uBACA,uBACA,+CAbF,8IAgBE,uBACA,uBACA,wEAIa,IAAVgC,EAEP,sBAAKhC,UAAU,QAAf,UACE,8CACA,4EACA,uOAKA,qBAAKA,UAAU,cAAf,SACE,qBAAKkC,IAAKG,EAAaD,IAAI,UAId,IAAVJ,EAEP,sBAAKhC,UAAU,QAAf,UACE,gDACA,8FACA,8NAKA,qBAAKA,UAAU,cAAf,SACE,qBAAKkC,IAAKI,EAAUF,IAAI,UAIX,IAAVJ,EAEP,sBAAKhC,UAAU,QAAf,UACE,wCACA,oIAIA,sHAE4B,IAC1B,mBACEC,KAAK,2CACL/E,OAAO,SACPsF,IAAI,aAHN,oBAHF,eARC,EAkCF+B,CAAUP,GAEX,qBAAKhC,UAAU,gBAAf,SACE,wBAAQA,UAAU,eAAeE,QAAS,kBAAM4B,GAAY,IAA5D,6BAIF,sBAAK9B,UAAU,eAAf,UACGgC,EAAQ,GACP,wBACEhC,UAAU,eACVE,QAAS,kBAAM+B,EAASD,EAAQ,IAFlC,sBAODA,EAAQ,GACP,wBACEhC,UAAU,eACVE,QAAS,kBAAM+B,EAASD,EAAQ,IAFlC,kBAODA,GAAS,GACR,wBAAQhC,UAAU,eAAeE,QAAS,kBAAM4B,GAAY,IAA5D,0BAMLlB,QAAQC,IAAImB,O,QCtLNQ,EAAU,SAACxH,EAAOyH,GAC7B,MAAoB,kBAAhBA,EAAO3G,MACTd,EAAMmG,YAAcsB,EAAO1G,QACpBf,GAGW,eAAhByH,EAAO3G,MACTd,EAAMoF,UAAYqC,EAAO1G,QAClBf,GAGW,eAAhByH,EAAO3G,MACTd,EAAM6C,eAAiB4E,EAAO1G,QAC9B6E,QAAQC,IAAI4B,EAAO1G,SACZf,GAGW,gBAAhByH,EAAO3G,MACTd,EAAM2G,gBAAkBc,EAAO1G,QAC/B6E,QAAQC,IAAI4B,EAAO1G,SACZf,GAIW,aAAhByH,EAAO3G,MACTd,EAAMS,KAAOgH,EAAO1G,QACN,2BAAQf,GAAR,IAAeS,KAAMgH,EAAO1G,WAKxB,iBAAhB0G,EAAO3G,MACTd,EAAMC,cAAgBwH,EAAO1G,QACtBf,GAEW,kBAAhByH,EAAO3G,MACTd,EAAMK,eAAiBoH,EAAO1G,QACvBf,GAIW,iBAAhByH,EAAO3G,MACTd,EAAM6C,eAAiB4E,EAAO1G,QAC9B6E,QAAQC,IAAI4B,EAAO1G,SACZf,GAEW,kBAAhByH,EAAO3G,MACTd,EAAM2G,gBAAkBc,EAAO1G,QAC/B6E,QAAQC,IAAI4B,EAAO1G,SACZf,GAIW,gBAAhByH,EAAO3G,MACTd,EAAMoG,WAAaqB,EAAO1G,QACnBf,QAFT,GCiCa0H,EA9EF,WAAM,MAEqBX,mBAASY,OAAOC,YAFrC,mBAEVC,EAFU,KAEGC,EAFH,KAMjBH,OAAOI,iBAAiB,UAHN,WAChBD,EAAeH,OAAOC,eAIxB,IAAI9F,EAAM,EACNC,EAAM,EACNiG,EAAa,EACbC,EAAc,IACdJ,EAAc,MAChB/F,EAAM,GACNC,EAAM,GACNiG,EAAa,IACbC,EAAc,MACLJ,EAAc,MACvB/F,EAAM,GACNC,EAAM,GACNiG,EAAa,IACbC,EAAc,KACLJ,EAAc,KACvB/F,EAAM,GACNC,EAAM,GACNiG,EAAa,IACbC,EAAc,KACLJ,EAAc,MACvB/F,EAAM,GACNC,EAAM,GACNiG,EAAa,GACbC,EAAc,KAIhB,IAAIC,EAAOvH,SAASO,eAAe,QACnCgH,EAAKC,MAAMC,YAAY,cAAetG,GACtCoG,EAAKC,MAAMC,YAAY,iBAAkBrG,GAGzC,IAxCiB,EAkESsG,qBAAWb,EA1Bd,SAAC1F,EAAKC,GAY3B,IAXA,IAAMuG,EAAe,CACnBtG,MAAO,GACPmE,aAAa,EACbf,WAAW,EACXvC,eAAgBmF,EAChBrB,gBAAiBsB,EACjBhI,eAAe,EACfI,gBAAgB,EAChB+F,YAAY,EACZ3F,KAAM,IAECyD,EAAI,EAAGA,EAAIpC,EAAKoC,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIpC,EAAKoC,IAAK,CAC5B,IAAMjC,EAAO,CACXJ,IAAKoC,EACLnC,IAAKoC,EACLO,IAAK,MAEP4D,EAAatG,MAAMiC,KAAK/B,GAG5B,OAAOoG,EAIqCC,CAAezG,EAAKC,IAlEjD,mBAkEV/B,EAlEU,KAkEHQ,EAlEG,OAmEeuG,oBAAS,GAnExB,mBAmEVF,EAnEU,KAmEAC,EAnEA,KAqEjB,OACE,qCACGD,GAAY,cAAC,EAAD,CAAUA,SAAUA,EAAUC,YAAaA,IACxD,cAAC,EAAD,CAAQ9G,MAAOA,EAAO8B,IAAKA,EAAKC,IAAKA,EAAKvB,SAAUA,IACpD,cAAC,EAAD,CAAMR,MAAOA,EAAOQ,SAAUA,QCnErBgI,MARf,WACE,OACE,qBAAKrD,GAAG,OAAR,SACE,cAAC,EAAD,OCJNsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhI,SAASO,eAAe,W","file":"static/js/main.c219533c.chunk.js","sourcesContent":["// Clear walls\nexport const clearWalls = (row, col, dispatch) => {\n  dispatch({ type: \"IS_FINISHED\", payload: false });\n  for (let x = 0; x < row; x++) {\n    for (let y = 0; y < col; y++) {\n      let node = document.getElementById(`node-${x}-${y}`);\n      node.classList.remove(\"wall\");\n    }\n  }\n};\nexport const clearPath = (row, col, dispatch) => {\n  dispatch({ type: \"IS_FINISHED\", payload: false });\n  for (let x = 0; x < row; x++) {\n    for (let y = 0; y < col; y++) {\n      let node = document.getElementById(`node-${x}-${y}`);\n      node.classList.remove(\"visited\");\n      node.classList.remove(\"queue\");\n      node.classList.remove(\"shortest\");\n    }\n  }\n};\n\n/* Mouse event handlers */\n// Drawing walls\nexport const handleMouseDown = (target, dispatch) => {\n  if (\n    !target.classList.contains(\"target\") &&\n    !target.classList.contains(\"start\")\n  ) {\n    dispatch({ type: \"BUILDING_WALL\", payload: true });\n    target.classList.add(\"wall\");\n  }\n  if (target.classList.contains(\"start\")) {\n    dispatch({ type: \"MOVING_START\", payload: true });\n  }\n  if (target.classList.contains(\"target\"))\n    dispatch({ type: \"MOVING_TARGET\", payload: true });\n};\n\nexport const handleMouseUp = (target, dispatch, state) => {\n  if (state.isMouseDown) dispatch({ type: \"BUILDING_WALL\", payload: false });\n  if (state.isMovingStart) dispatch({ type: \"MOVING_START\", payload: false });\n  if (state.isMovingTarget) dispatch({ type: \"MOVING_TARGET\", payload: false });\n};\n\nexport const handleMouseEnter = (target, state, dispatch, algorithmObj) => {\n  if (\n    state.isMouseDown &&\n    !target.classList.contains(\"target\") &&\n    !target.classList.contains(\"start\") &&\n    target !== document.getElementById(\"grid\")\n  )\n    target.classList.add(\"wall\");\n\n  if (\n    state.isMovingStart &&\n    !target.classList.contains(\"target\") &&\n    !target.classList.contains(\"start\") &&\n    target !== document.getElementById(\"grid\")\n  ) {\n    target.classList.add(\"start\");\n    const index = getIndexOf(target);\n    dispatch({ type: \"ASSIGN_START\", payload: index });\n\n    if (state.isFinished) {\n      let instant = true;\n      let { getGridSize, getNodeObject } = algorithmObj;\n      let [bfs, dfs] = algorithmObj.algorithms;\n      if (state.algo === \"Breadth-first Search\") {\n        bfs(state, dispatch, getNodeObject, getGridSize, instant);\n      }\n      if (state.algo === \"Depth-first Search\") {\n        dfs(state, dispatch, getNodeObject, getGridSize, instant);\n      }\n    }\n  }\n\n  if (\n    state.isMovingTarget &&\n    !target.classList.contains(\"target\") &&\n    !target.classList.contains(\"start\") &&\n    target !== document.getElementById(\"grid\")\n  ) {\n    target.classList.add(\"target\");\n    const index = getIndexOf(target);\n    dispatch({ type: \"ASSIGN_TARGET\", payload: index });\n\n    if (state.isFinished) {\n      let instant = true;\n      let { getGridSize, getNodeObject } = algorithmObj;\n      let [bfs, dfs] = algorithmObj.algorithms;\n      if (state.algo === \"Breadth-first Search\") {\n        bfs(state, dispatch, getNodeObject, getGridSize, instant);\n      }\n      if (state.algo === \"Depth-first Search\") {\n        dfs(state, dispatch, getNodeObject, getGridSize, instant);\n      }\n    }\n  }\n};\n\nexport const handleMouseLeave = (e, state) => {\n  if (state.isMovingStart) e.target.classList.remove(\"start\");\n  if (state.isMovingTarget) e.target.classList.remove(\"target\");\n};\n\n// Show algorithm menu\nexport const handleListClick = (event, dispatch, state) => {\n  let algo = event.target.innerText;\n  const algoList = document.querySelector(\".algo-list\");\n  algoList.classList.toggle(\"show-menu\");\n  dispatch({ type: \"SET_ALGO\", payload: algo });\n};\n\n// Dynamically grab grid size\nexport const getGridSize = () => {\n  const grid = document.getElementById(\"grid\");\n  const styles = getComputedStyle(grid);\n  const row = styles.gridTemplateRows.split(\" \").length;\n  const col = styles.gridTemplateColumns.split(\" \").length;\n  return [row, col];\n};\n\n// Find index of new Start node or Target node\nexport const getIndexOf = (target) => {\n  const parentNode = document.getElementById(\"grid\");\n  const childNodes = parentNode.children;\n  const [...childNodesArr] = childNodes;\n  const index = childNodesArr.indexOf(target);\n  return index;\n};\n\n// Get node object via on row/col\nexport const getNodeObject = (state, row, col) => {\n  let nodeObj = state.nodes.filter(\n    (node) => node.row === row && node.col === col\n  );\n  return nodeObj[0];\n};\n","// DFS\n\nexport const dfs = async (\n  state,\n  dispatch,\n  getNodeObject,\n  getGridSize,\n  instant\n) => {\n  const timeout = (time) => new Promise((resolve) => setTimeout(resolve, time));\n\n  // Get grid size\n  const row = getGridSize()[0];\n  const col = getGridSize()[1];\n\n  // Clear visited, queue, and shortest path\n  clearGrid(row, col);\n\n  const startNode = state.nodes[state.startNodeIndex];\n  const stack = [startNode];\n\n  while (stack.length > 0) {\n    let currentNode = stack.pop();\n    let currentX = currentNode.row;\n    let currentY = currentNode.col;\n    let currentNodeDom = document.getElementById(\n      `node-${currentX}-${currentY}`\n    );\n\n    // Check to see if current node is target\n    // Marks current node as visited\n    if (currentNodeDom.classList.contains(\"target\")) {\n      dispatch({ type: \"IS_RUNNING\", payload: false });\n      dispatch({ type: \"IS_FINISHED\", payload: true });\n      return;\n    }\n    if (!currentNodeDom.classList.contains(\"start\"))\n      currentNodeDom.classList.add(\"visited\");\n\n    // Directional Vectors left down right up\n    const rowVectors = [0, 1, 0, -1];\n    const colVectors = [-1, 0, 1, 0];\n\n    // Validate neighbour nodes\n    for (let i = 0; i < 4; i++) {\n      // Using timeout to slow down loop for better viewability\n      if (instant === undefined) await timeout();\n      let xCord = currentX + rowVectors[i];\n      let yCord = currentY + colVectors[i];\n\n      // Validate node is inbound\n      if (xCord >= 0 && xCord < row && yCord >= 0 && yCord < col) {\n        let nextNode = document.getElementById(`node-${xCord}-${yCord}`);\n        let classes = nextNode.classList;\n        let isVisited = classes.contains(\"visited\");\n        let isWall = classes.contains(\"wall\");\n        // Validate node is not a wall and hasn't been visited\n        if (!isVisited && !isWall) {\n          let nodeObj = getNodeObject(state, xCord, yCord);\n          // Push neighbour node to stack\n          stack.push(nodeObj);\n        }\n      }\n    }\n  }\n  // If target is not found, change state of isRunning\n  if (stack.length === 0) dispatch({ type: \"IS_RUNNING\", payload: false });\n};\n\nconst clearGrid = (row, col) => {\n  for (let x = 0; x < row; x++) {\n    for (let y = 0; y < col; y++) {\n      let node = document.getElementById(`node-${x}-${y}`);\n      node.classList.remove(\"visited\");\n      node.classList.remove(\"queue\");\n      node.classList.remove(\"shortest\");\n    }\n  }\n};\n\nexport const bfs = async (\n  state,\n  dispatch,\n  getNodeObject,\n  getGridSize,\n  instant\n) => {\n  // timeout function to slow down the for loop\n  const timeout = (time) => new Promise((resolve) => setTimeout(resolve, time));\n\n  // Get grid size\n  const row = getGridSize()[0];\n  const col = getGridSize()[1];\n  // Clear visited, queue, and shortest path\n  clearGrid(row, col);\n\n  // Get start node and add to queue\n  const nodes = state.nodes;\n  const startNode = nodes[state.startNodeIndex];\n  const visited = new Set([startNode]);\n  let parents = [];\n  startNode[\"parents\"] = parents;\n  const queue = [startNode];\n  while (queue.length > 0) {\n    const currentNode = queue.shift();\n    parents = [...currentNode.parents];\n    const currentX = currentNode.row;\n    const currentY = currentNode.col;\n    const currentNodeDom = document.getElementById(\n      `node-${currentX}-${currentY}`\n    );\n    currentNode.dom = currentNodeDom;\n    currentNodeDom.classList.remove(\"queue\");\n\n    // Validate if current node is target\n    if (currentNodeDom.classList.contains(\"target\")) {\n      backtracking(currentNode, dispatch, instant);\n      dispatch({ type: \"IS_RUNNING\", payload: false });\n      return;\n    }\n\n    // Mark current node as visited\n    if (!currentNodeDom.classList.contains(\"start\"))\n      currentNodeDom.classList.add(\"visited\");\n\n    // Validate neighbour nodes\n    // Directional Vectors left down right up\n    const rowVectors = [0, 1, 0, -1];\n    const colVectors = [-1, 0, 1, 0];\n    for (let i = 0; i < 4; i++) {\n      if (instant === undefined) await timeout();\n      const xCord = currentX + rowVectors[i];\n      const yCord = currentY + colVectors[i];\n\n      // Validate if it is inbound\n      if (xCord >= 0 && xCord < row && yCord >= 0 && yCord < col) {\n        // Validate if it has been visited\n        let nextNode = document.getElementById(`node-${xCord}-${yCord}`);\n        let isVisited = nextNode.classList.contains(\"visited\");\n        let isWall = nextNode.classList.contains(\"wall\");\n        if (!isVisited && !isWall) {\n          let nextNodeObj = getNodeObject(state, xCord, yCord);\n          if (!visited.has(nextNodeObj)) {\n            nextNode.classList.add(\"queue\");\n            nextNodeObj.parents = [...parents, currentNode];\n            visited.add(nextNodeObj);\n            queue.push(nextNodeObj);\n          }\n        }\n      }\n    }\n    parents = [];\n  }\n  dispatch({ type: \"IS_RUNNING\", payload: false });\n  dispatch({ type: \"IS_FINISHED\", payload: true });\n  return;\n};\n\nconst backtracking = async (currentNode, dispatch, instant) => {\n  const timeout = (time) => new Promise((resolve) => setTimeout(resolve, time));\n\n  const path = currentNode.parents;\n  currentNode.dom.classList.add(\"shortest\");\n  for (let i = path.length - 1; i > 0; i--) {\n    if (instant === undefined) await timeout(50);\n    path[i].dom.classList.add(\"shortest\");\n  }\n  dispatch({ type: \"IS_FINISHED\", payload: true });\n  return;\n};\n","import React from \"react\";\n\n// Utility\nimport {\n  handleListClick,\n  clearWalls,\n  getGridSize,\n  getNodeObject,\n  clearPath,\n} from \"../utility\";\n\n// Algorithms\nimport { dfs, bfs } from \"../algorithms\";\n\nconst Header = ({ dispatch, state, row, col }) => {\n  const handleVirtualize = (state) => {\n    if (state.isRunning) return;\n    switch (state.algo) {\n      case \"Depth-first Search\":\n        dispatch({ type: \"IS_RUNNING\", payload: true });\n        dfs(state, dispatch, getNodeObject, getGridSize);\n        break;\n      case \"Breadth-first Search\":\n        dispatch({ type: \"IS_RUNNING\", payload: true });\n        bfs(state, dispatch, getNodeObject, getGridSize);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <header>\n      <div className=\"title-icon\">\n        <div className=\"icon\"></div>\n        <a href=\"http://andrewpham.ca/pathfinding\">\n          <h1 className=\"title\">Pathfinding Visualizer</h1>\n        </a>\n      </div>\n\n      <ul className=\"grid-buttons\">\n        <li className=\"algo-menu\">\n          <button\n            href=\"#\"\n            className=\"choose-algo\"\n            onClick={() => {\n              const algoList = document.querySelector(\".algo-list\");\n              algoList.classList.toggle(\"show-menu\");\n            }}\n          >\n            <strong>Algorithms</strong>{\" \"}\n            <i className=\"ri-arrow-down-s-fill ri-lg algo-icon\"></i>\n          </button>\n          <ul id=\"algo-list\" className=\"algo-list\">\n            <li onClick={(event) => handleListClick(event, dispatch, state)}>\n              Breadth-first Search\n            </li>\n            <li onClick={(event) => handleListClick(event, dispatch, state)}>\n              Depth-first Search\n            </li>\n            <li onClick={(event) => handleListClick(event, dispatch, state)}>\n              Dijkstra's Algorithm\n            </li>\n            <li onClick={(event) => handleListClick(event, dispatch, state)}>\n              A* Search\n            </li>\n            <li onClick={(event) => handleListClick(event, dispatch, state)}>\n              Swarm Algoirthm\n            </li>\n          </ul>\n        </li>\n        <li>\n          <button\n            onClick={() => handleVirtualize(state, dispatch)}\n            className=\"btn visualize-btn\"\n          >\n            Visualize {state.algo}!\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"clear-btn btn\"\n            onClick={() => {\n              clearWalls(row, col, dispatch);\n            }}\n          >\n            Clear Walls\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"clear-path-btn btn\"\n            onClick={() => {\n              clearPath(row, col, dispatch);\n            }}\n          >\n            Clear Path\n          </button>\n        </li>\n      </ul>\n      <div className=\"links\">\n        <a\n          target=\"_blank\"\n          href=\"https://github.com/andrewphm/pathfinding\"\n          rel=\"noreferrer\"\n        >\n          <i className=\"ri-github-fill ri-lg\"></i>\n        </a>\n        <a target=\"_blank\" href=\"https://andrewpham.ca\" rel=\"noreferrer\">\n          <i className=\"ri-user-fill ri-lg\"></i>\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\n// Utility\nimport {\n  handleMouseDown,\n  handleMouseEnter,\n  handleMouseLeave,\n  handleMouseUp,\n  getGridSize,\n  getNodeObject,\n} from \"../../utility\";\n\n// Algorithms\nimport { bfs, dfs } from \"../../algorithms\";\n\nconst Grid = ({ state, dispatch }) => {\n  let algorithmObj = {\n    algorithms: [bfs, dfs],\n    getGridSize: getGridSize,\n    getNodeObject: getNodeObject,\n  };\n\n  const algorithmDescription = (algo) => {\n    if (algo === \"Breadth-first Search\") {\n      return (\n        <p>\n          Breath-first Search is <strong>unweighted</strong> and\n          <strong> guarantees </strong>the shortest path!\n        </p>\n      );\n    }\n  };\n\n  return (\n    <section\n      onClick={() => {\n        console.log(\"firing\");\n        let list = document.getElementById(\"algo-list\");\n        if (list.classList.contains(\"show-menu\"))\n          list.classList.remove(\"show-menu\");\n      }}\n      className=\"grid-container\"\n    >\n      <div className=\"algo-description\">{algorithmDescription(state.algo)}</div>\n      <div className=\"legend-container\">\n        <ul className=\"legend\">\n          <li>\n            <div className=\"start-node\"></div>\n            <p> Start Node</p>\n          </li>\n          <li>\n            <div className=\"target-node\"></div>\n            <p> Target Node</p>\n          </li>\n          <li>\n            <div className=\"unvisited-node\"></div>\n            <p> Unvisited Nodes</p>\n          </li>\n          <li>\n            <div className=\"visited-node\"></div>\n            <p> Visited Nodes</p>\n          </li>\n          <li>\n            <div className=\"shortest-path\"></div>\n            <p> Shortest Path</p>\n          </li>\n          <li>\n            <div className=\"wall-node\"></div>\n            <p> Wall Nodes</p>\n          </li>\n        </ul>\n      </div>\n\n      <div\n        id=\"grid\"\n        onMouseDown={(event) => {\n          handleMouseDown(event.target, dispatch);\n        }}\n        onMouseOver={(event) => {\n          handleMouseEnter(event.target, state, dispatch, algorithmObj);\n        }}\n        onMouseUp={(event) => handleMouseUp(event.target, dispatch, state)}\n      >\n        {state.nodes.map((e, index) => {\n          const { row, col } = e;\n          let className = \"\";\n          if (index === state.startNodeIndex) {\n            className = \"start\";\n            return (\n              <div\n                onMouseLeave={(e) => handleMouseLeave(e, state)}\n                id={`node-${row}-${col}`}\n                key={index}\n                className={`grid-item ${className}`}\n              ></div>\n            );\n          }\n          if (index === state.targetNodeIndex) {\n            className = \"target\";\n            return (\n              <div\n                onMouseLeave={(e) => handleMouseLeave(e, state)}\n                id={`node-${row}-${col}`}\n                key={index}\n                className={`grid-item ${className}`}\n              ></div>\n            );\n          }\n          return (\n            <div\n              onMouseLeave={(e) => handleMouseLeave(e, state)}\n              id={`node-${row}-${col}`}\n              key={index}\n              className={`grid-item`}\n            ></div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default Grid;\n","export default __webpack_public_path__ + \"static/media/choose-algorithm.08636ea9.png\";","export default __webpack_public_path__ + \"static/media/making-walls.8429579f.gif\";","export default __webpack_public_path__ + \"static/media/dragging.c5dafc9b.gif\";","import React, { useState } from \"react\";\n\nimport slide3img from \"../assets/choose-algorithm.png\";\nimport makingWalls from \"../assets/making-walls.gif\";\nimport dragging from \"../assets/dragging.gif\";\n\nconst Tutorial = ({ tutorial, setTutorial }) => {\n  const [slide, setSlide] = useState(1);\n  const showSlide = (slide) => {\n    if (slide === 1) {\n      return (\n        <div className=\"slide\">\n          <h1>Welcome to the Pathfinding Visualizer!</h1>\n          <h2>\n            This short tutorial will walk you through all the features of this\n            application.\n          </h2>\n          <p>\n            If you want to dive right in, feel free to press the \"Skip Tutorial\"\n            button below. Otherwise, press \"Next\"!\n          </p>\n          <div className=\"slide-img-1\"></div>\n        </div>\n      );\n    } else if (slide === 2) {\n      return (\n        <div className=\"slide\">\n          <h1>What is a Pathfinding Algorithm?</h1>\n          <h2>\n            At its core, a pathfinding algorithm seeks to find the shortest path\n            between two points. This application visualizes various pathfinding\n            algorithms in action, and more!\n          </h2>\n          <p>\n            A real world use of these pathfinding algorithms is when you're\n            looking up directions on a GPS app. You're trying to find the\n            shortest path between two addresses.\n          </p>\n          <div className=\"slide-img-2\"></div>\n        </div>\n      );\n    } else if (slide === 3) {\n      return (\n        <div className=\"slide\">\n          <h1>Choosing an algorithm</h1>\n          <h2>\n            The first step is choosing an algorithm from the \"Algorithms\"\n            drop-down menu\n          </h2>\n          <p>\n            Note that some algorithms are <strong>unweighted</strong>, while\n            others are <strong>weighted</strong>. Unweighted algorithms do not\n            take turns or weight nodes into account, whereas weighted ones do.\n            Additionally, not all algorithms guarantee the shortest path.\n          </p>\n          <div className=\"image-wrapper\">\n            <img src={slide3img} alt=\"\" />\n          </div>\n        </div>\n      );\n    } else if (slide === 4) {\n      return (\n        <div className=\"slide\">\n          <h1>Meet the Algorithms</h1>\n          <h2>Not all algorithms are created equal.</h2>\n          <p>\n            <strong>Breadth-first Search</strong> (unweighted): a great\n            algorithm, guarantees the shortest path.\n            <br></br>\n            <br></br>\n            <strong>Depth-first Search</strong> (unweighted): a very bad\n            algorithm, does not guarantee the shortest path.\n            <br></br>\n            <br></br>\n            <strong>Dijkstra's Algorithm</strong> (weighted): the father of\n            pathfinding algorithms, guarantees the shortest path.\n            <br></br>\n            <br></br>\n            <strong>A* Search</strong> (weighted): arguably the best pathfinding\n            algorithm; uses heuristics to guarantee the shortest path much\n            faster than Dijkstra's Algorithm.\n            <br></br>\n            <br></br>\n            <strong>More algorithms coming soon!</strong>\n          </p>\n        </div>\n      );\n    } else if (slide === 5) {\n      return (\n        <div className=\"slide\">\n          <h1>Adding Walls</h1>\n          <h2>Click and drag on the grid to create walls</h2>\n          <p>\n            Walls are impenetrable, meaning the path cannot go through them.\n            Feel free to draw up walls to visualize how the algorithm deals with\n            them. To remove walls click the \"Clear Walls\" button at the top!\n          </p>\n          <div className=\"gif-wrapper\">\n            <img src={makingWalls} alt=\"\" />\n          </div>\n        </div>\n      );\n    } else if (slide === 6) {\n      return (\n        <div className=\"slide\">\n          <h1>Dragging Nodes</h1>\n          <h2>Click and drag the start and target node to reposition them.</h2>\n          <p>\n            You can reposition the Start Node and Target Node at any time. If\n            the pathfinding algorithm is finished, you can move around the nodes\n            to instantly see how the pathfinding algorithm reacts.\n          </p>\n          <div className=\"gif-wrapper\">\n            <img src={dragging} alt=\"\" />\n          </div>\n        </div>\n      );\n    } else if (slide === 7) {\n      return (\n        <div className=\"slide\">\n          <h1>Enjoy!</h1>\n          <h2>\n            I hope you have just as much fun playing around with this\n            visualization tool as I had building it!\n          </h2>\n          <p>\n            If you want to see how I made it or the source code for the\n            application, check out my{\" \"}\n            <a\n              href=\"https://github.com/andrewphm/pathfinding\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              github\n            </a>\n            !\n          </p>\n        </div>\n      );\n    }\n  };\n  return (\n    <section className=\"overlay\">\n      <div className=\"tutorial\">\n        <div className=\"slide-number\">\n          <p>{slide}/7</p>\n        </div>\n        <div className=\"close-tutorial\" onClick={() => setTutorial(false)}>\n          <i className=\"ri-close-fill\"></i>\n        </div>\n\n        {showSlide(slide)}\n\n        <div className=\"skip-tutorial\">\n          <button className=\"tutorial-btn\" onClick={() => setTutorial(false)}>\n            Skip tutorial\n          </button>\n        </div>\n        <div className=\"change-slide\">\n          {slide > 1 && (\n            <button\n              className=\"tutorial-btn\"\n              onClick={() => setSlide(slide - 1)}\n            >\n              Previous\n            </button>\n          )}\n          {slide < 7 && (\n            <button\n              className=\"tutorial-btn\"\n              onClick={() => setSlide(slide + 1)}\n            >\n              Next\n            </button>\n          )}\n          {slide >= 7 && (\n            <button className=\"tutorial-btn\" onClick={() => setTutorial(false)}>\n              Finish\n            </button>\n          )}\n        </div>\n      </div>\n      {console.log(slide)}\n    </section>\n  );\n};\n\nexport default Tutorial;\n","export const reducer = (state, action) => {\n  if (action.type === \"BUILDING_WALL\") {\n    state.isMouseDown = action.payload;\n    return state;\n  }\n\n  if (action.type === \"IS_RUNNING\") {\n    state.isRunning = action.payload;\n    return state;\n  }\n\n  if (action.type === \"START_NODE\") {\n    state.startNodeIndex = action.payload;\n    console.log(action.payload);\n    return state;\n  }\n\n  if (action.type === \"TARGET_NODE\") {\n    state.targetNodeIndex = action.payload;\n    console.log(action.payload);\n    return state;\n  }\n\n  // Assign algo state\n  if (action.type === \"SET_ALGO\") {\n    state.algo = action.payload;\n    const newState = { ...state, algo: action.payload };\n    return newState;\n  }\n\n  // Moving start or target nodes\n  if (action.type === \"MOVING_START\") {\n    state.isMovingStart = action.payload;\n    return state;\n  }\n  if (action.type === \"MOVING_TARGET\") {\n    state.isMovingTarget = action.payload;\n    return state;\n  }\n\n  // changing start/target node index\n  if (action.type === \"ASSIGN_START\") {\n    state.startNodeIndex = action.payload;\n    console.log(action.payload);\n    return state;\n  }\n  if (action.type === \"ASSIGN_TARGET\") {\n    state.targetNodeIndex = action.payload;\n    console.log(action.payload);\n    return state;\n  }\n\n  // Validating if pathfinding is done\n  if (action.type === \"IS_FINISHED\") {\n    state.isFinished = action.payload;\n    return state;\n  }\n};\n","import React, { useReducer, useState } from \"react\";\n\n// Import components\nimport Header from \"./Header\";\nimport Grid from \"./Grid/\";\nimport Tutorial from \"./Tutorial\";\n\nimport { reducer } from \"./reducer\";\nconst Home = () => {\n  // Detect width\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const checkSize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n  window.addEventListener(\"resize\", checkSize);\n\n  let row = 0;\n  let col = 0;\n  let startIndex = 0;\n  let targetIndex = 300;\n  if (windowWidth > 1600) {\n    row = 25;\n    col = 50;\n    startIndex = 305;\n    targetIndex = 1043;\n  } else if (windowWidth > 1080) {\n    row = 20;\n    col = 40;\n    startIndex = 165;\n    targetIndex = 672;\n  } else if (windowWidth > 768) {\n    row = 20;\n    col = 30;\n    startIndex = 124;\n    targetIndex = 503;\n  } else if (windowWidth > 320) {\n    row = 25;\n    col = 20;\n    startIndex = 43;\n    targetIndex = 435;\n  }\n\n  // Set properties of CSS variable grid row/col\n  let root = document.getElementById(\"root\");\n  root.style.setProperty(\"--grid-rows\", row);\n  root.style.setProperty(\"--grid-columns\", col);\n\n  // Set up default state of nodes\n  const initialGridArr = (row, col) => {\n    const defaultState = {\n      nodes: [],\n      isMouseDown: false,\n      isRunning: false,\n      startNodeIndex: startIndex,\n      targetNodeIndex: targetIndex,\n      isMovingStart: false,\n      isMovingTarget: false,\n      isFinished: false,\n      algo: \"\",\n    };\n    for (let x = 0; x < row; x++) {\n      for (let y = 0; y < col; y++) {\n        const node = {\n          row: x,\n          col: y,\n          dom: null,\n        };\n        defaultState.nodes.push(node);\n      }\n    }\n    return defaultState;\n  };\n\n  // Create useReducer hook to manage node/grid state. Set up state for algorithm chosen\n  const [state, dispatch] = useReducer(reducer, initialGridArr(row, col));\n  const [tutorial, setTutorial] = useState(true);\n\n  return (\n    <>\n      {tutorial && <Tutorial tutorial={tutorial} setTutorial={setTutorial} />}\n      <Header state={state} row={row} col={col} dispatch={dispatch} />\n      <Grid state={state} dispatch={dispatch} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\n// Components\n\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div id=\"main\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}